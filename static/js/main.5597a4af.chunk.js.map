{"version":3,"sources":["components/imagesApi/imagesApi.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","exportObject","fetchHits","a","searchQuery","currentPage","get","then","response","data","hits","Searchbar","state","query","handleChange","element","setState","currentTarget","value","handleSubmit","preventDefault","length","props","onChangeQuery","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","alt","src","url","onClick","Button","onfetchHits","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","currentPageImages","isLoading","error","largeImage","showModal","modalUrl","modalAlt","toggleModal","options","imagesApi","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","onClickImageGalleryItem","getAttribute","prevProps","shouldRenderLoadMoreButton","map","id","tags","webformatURL","largeImageURL","style","textAlign","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5597a4af.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '21803950-62f4c86011510fd15fe85c0d2';\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\nconst fetchHits = async ({ searchQuery = '', currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nconst exportObject = { fetchHits };\r\nexport default exportObject;\r\n","    import React, { Component } from \"react\";\r\n    class Searchbar extends Component{ \r\n    state = { query: '' };\r\n\r\n    handleChange = element => {\r\n        this.setState({ query: element.currentTarget.value, })\r\n    };\r\n    handleSubmit=element=>{\r\n    element.preventDefault();\r\n        if (this.state.query.length !== 0) {\r\n            this.props.onChangeQuery(this.state.query)     \r\n        } \r\n    }\r\n    render(){\r\n        return (\r\n    <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" onSubmit={this.handleSubmit} className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n            <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                value={this.state.query}\r\n                onChange={this.handleChange}\r\n            />\r\n         </form>\r\n    </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;","import React from 'react';\r\nconst ImageGallery = ({ children }) => (\r\n  <ul className=\"ImageGallery\">{children}</ul>\r\n);\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ImageGalleryItem = ({ alt, src, url, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={onClick}\r\n      src={src}\r\n      alt={alt}\r\n      url={url}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nclass Button extends Component {\r\n    render() {\r\n    return(\r\n        <button type=\"button\" className=\"Button\" onClick={this.props.onfetchHits} >\r\n            Load more\r\n        </button>\r\n    )}\r\n};\r\nexport default Button;","import React, { Component} from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    render(){\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>, \r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\nexport default Modal;","import React, { Component } from 'react';\nimport imagesApi from './components/imagesApi/imagesApi';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem'\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport './styles.css';\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    currentPageImages: [],\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    largeImage: '',\n    showModal: false,\n    modalUrl: '',\n    modalAlt: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits();\n    }\n  } \n  onChangeQuery = searchQuery => {\n    this.setState({ \n      searchQuery: searchQuery, \n      currentPage: 1, \n      hits: [], \n      error: null, \n    })\n  }\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n  fetchHits = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n    this.setState({ isLoading: true });\n    imagesApi\n    .fetchHits(options)\n    .then(hits => {\n      this.setState( prevState => ({\n        hits: [...prevState.hits, ...hits], \n        currentPage: prevState.currentPage + 1,\n        currentPageImages: [...hits], \n      }));\n      if (hits.length === 0) {\n          this.setState({\n            error: 'Nothing was find by your query. Try again.',});\n      }})\n      .then(() => {\n                window.scrollTo({\n                  top: document.documentElement.scrollHeight,\n                  behavior: 'smooth',\n                })\n              })\n    .catch(error => this.setState({ error }))\n    .finally(() => this.setState({ isLoading: false }));\n  };\n  onClickImageGalleryItem = e => {\n    this.setState({\n      modalUrl: e.currentTarget.getAttribute('url'),\n      modalAlt: e.currentTarget.getAttribute('alt'),\n    });\n    this.toggleModal();\n  };\n  render() {\n    const { hits, currentPageImages, isLoading, error, showModal, modalAlt, modalUrl } = this.state;\n    const shouldRenderLoadMoreButton = !(currentPageImages.length < 12) && !isLoading;\n    return (\n      <>\n        <Searchbar onChangeQuery={this.onChangeQuery} />\n        {error && (\n          <p >\n           {error}\n          </p>\n        )}\n        <ImageGallery>\n          {hits.map(({ id, tags, webformatURL, largeImageURL }) => (\n            <ImageGalleryItem key={id} alt={tags} src={webformatURL} url={largeImageURL} onClick={this.onClickImageGalleryItem} />\n          ))}\n        </ImageGallery>\n\n        {isLoading && \n       \n        <Loader \n        style={{textAlign: 'center'}}\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs \n        /> }     \n                    \n        {shouldRenderLoadMoreButton && <Button  onfetchHits={this.fetchHits}/> }\n\n        {showModal && (\n          <Modal src={modalUrl} alt={modalAlt} onClose={this.toggleModal} />\n        )}  \n      </>      \n    )    \n  }   \n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}